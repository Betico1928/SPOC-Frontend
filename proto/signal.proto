syntax = "proto3";

package signal;

// Represents a complex number with real and imaginary parts.
message Complex {
    double real = 1;
    double imag = 2;
}


message MovingAverageRequest {
    repeated Complex signal = 1; 
    int32 window_size = 2;       
}


message MovingAverageResponse {
    repeated Complex result = 1; 
}

message RuningSumRequest {
    repeated Complex signal = 1;      
}

message RuningSumResponse {
    repeated Complex result = 1; 
}

message FirstDifferenceRequest {
    repeated Complex signal = 1;      
}


message FirstDifferenceResponse {
    repeated Complex result = 1; 
}

message IFFTRequest {
    repeated Complex signal = 1;      
}


message IFFTResponse {
    repeated Complex result = 1; 
}

message FastWaveletTransformHaarRequest {
    repeated Complex signal = 1;      
}


message FastWaveletTransformHaarResponse  {
    repeated Complex approximation = 1;
    repeated Complex detail = 2;
}


// The signal service definition.
service SignalService {
    rpc ComputeMovingAverage (MovingAverageRequest) returns (MovingAverageResponse);
    rpc ComputeRuningSum (RuningSumRequest) returns (RuningSumResponse);
    rpc ComputeFirstDifference (FirstDifferenceRequest) returns (FirstDifferenceResponse);
    rpc ComputeIFFT (IFFTRequest) returns (IFFTResponse);
    rpc ComputeFastWaveletTransformHaar (FastWaveletTransformHaarRequest) returns (FastWaveletTransformHaarResponse);
}